{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChanage","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GAChB,OACA,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,KAC/C,gCACI,6BAAKF,IACL,kCAAKC,YCQNK,EAZA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACVC,EAAeD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OAAQ,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAGpB,OACC,8BACEH,KCEWI,EAVC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCACfW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAAI,EAPF,SAACC,GAEb,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SAA6EJ,EAAMK,YC6CtEC,G,wDA3Cd,aAAc,IAAD,8BACZ,gBAeDC,gBAAgB,SAACC,GAChB,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAfxC,EAAKC,MAAM,CACVxB,OAAO,GACPqB,YAAY,IAJD,E,gEAOO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GACL,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GACJ,EAAKT,SAAS,CAACpB,OAAO6B,S,+BAMhB,IAAD,EACoBC,KAAKN,MAAzBxB,EADA,EACAA,OAAOqB,EADP,EACOA,YACRU,EAAe/B,EAAOgC,QAAO,SAAAhC,GAClC,OAAQA,EAAOP,KAAKwC,cAAcC,SACjCb,EAAYY,kBAGd,OAAKjC,EAAOmC,OAIX,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAW,iBAAf,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKZ,kBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ+B,SAPZ,6C,GA5BQK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f2618e9c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card=({name,email,id})=>{\n        return(\n        <div className=' tc bg-light-red white dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}`} />\n            <div>\n                <h2>{name}</h2>\n                <p> {email}</p>\n            </div>\n        </div>\n        );\n}\n\nexport default Card; ","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList=({robots})=>{\n\tconst cardComponent =robots.map((user,i) =>{\n\t\treturn (<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\t\n\t\t\t);\n\t})\n\treturn(\n\t\t<div>\n\t\t\t{cardComponent}\n\t\t</div>\n\t\t);\n\n}\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox=({searchChange})=>{\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue' \n\t\t\t\t type='search'\n\t\t\t\t placeholder='search robots'\n\t\t\t\t onChange={searchChange} />\n\t\t</div>\n\t\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll=(props)=>{\n\n\treturn (\n\t\t<div style={{overflowY:'scroll', border:'5px solid black', height:'500px'}}>{props.children}\n\t\t</div>\n\t\t);\n}\nexport default Scroll;","import React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots:[],\n\t\t\tsearchField:''\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=>{\n\t\t\treturn response.json();\n\t\t})\n\t\t.then(users=>\n\t\t\t{this.setState({robots:users})\n\t\t});\n\t}\n\tonSearchChanage=(event)=>{\n\t\tthis.setState({searchField:event.target.value})\n\t}\n\trender(){\n\t\tconst {robots,searchField}=this.state;\n\t\tconst filteredRobots=robots.filter(robots=>{\n\t\t\treturn \trobots.name.toLowerCase().includes\n\t\t\t(searchField.toLowerCase());\n\t\t})\n\n\t\tif (!robots.length){\n\t\t\treturn <h1>LOADING</h1>\n\t\t}else{\n\t\t\treturn(\n\t\t\t<div className=\"tc\">\n\t\t\t\t<h1 className= \"f1 solid green\">RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChanage}/>\n\t\t\t\t<Scroll>\n\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\t\n\t}\n\t\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React,{Components} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n\t);\n\n\t// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}